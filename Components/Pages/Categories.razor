
@page "/categories"
@using ExpenseTracker.Components.Data.Models
@using ExpenseTracker.Components.Services
@rendermode InteractiveServer
@inject CategoryService Service;

<PageTitle>Categories</PageTitle>
<ul>
    @foreach (var category in categories)
    {
        <li>
            @category.Name 
            <button @onclick="() => DeleteCategory(category.Id)">Delete</button>
        </li>
    }
</ul>

<h3>Add New Category</h3>
<input type="text" @bind="newCategoryName" placeholder="Category Name" />
<button @onclick="AddCategory">Add</button>

@code{
    List<Category> categories = new List<Category>();

    protected override void OnInitialized()
    {
        LoadCategories();
    }

    void LoadCategories()
    {
        categories = Service.findAllCategories();
    }

    string newCategoryName;

    void AddCategory()
    {
        if (!string.IsNullOrWhiteSpace(newCategoryName))
        {
            Category category = new Category
			{
				Id = categories.Count > 0 ? categories.Max(c => c.Id) + 1 : 1,
				Name = newCategoryName
			};
            Service.addCategory(category);
            LoadCategories();
            newCategoryName = string.Empty;
            StateHasChanged();
        }
    }

    void DeleteCategory(int? id)
    {
        var categoryToRemove = categories.FirstOrDefault(c => c.Id == id);
        if (categoryToRemove != null)
        {
            Service.removeCategory(categoryToRemove);
            LoadCategories();
            StateHasChanged();
        }
    }
}
