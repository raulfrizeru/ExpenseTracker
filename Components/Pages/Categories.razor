@page "/categories"
@using ExpenseTracker.Components.Data.Models
@using ExpenseTracker.Components.Services
@rendermode InteractiveServer
@inject CategoryService Service;
@inject NavigationManager Navigation;


<PageTitle>Categories</PageTitle>

<style>
    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif;
        min-height: 100vh;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        height: 160px;
        overflow: hidden;
    }

    .glass-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        border-color: rgba(255, 255, 255, 0.4);
    }

    .add-category-card {
        background: linear-gradient(135deg, rgba(0, 122, 255, 0.1) 0%, rgba(0, 122, 255, 0.05) 100%);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid rgba(0, 122, 255, 0.2);
        border-radius: 20px;
        box-shadow: 0 8px 32px rgba(0, 122, 255, 0.1);
    }

    .apple-title {
        font-weight: 600;
        color: #1d1d1f;
        letter-spacing: -0.022em;
    }

    .apple-subtitle {
        color: #86868b;
        font-weight: 400;
    }

    .apple-btn {
        border-radius: 10px;
        font-weight: 500;
        padding: 6px 12px;
        font-size: 0.8rem;
        border: none;
        transition: all 0.2s ease;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
    }

    .apple-btn-primary {
        background: #007aff;
        color: white;
    }

    .apple-btn-primary:hover {
        background: #0056cc;
        color:aliceblue;
        transform: scale(1.02);
    }

    .apple-btn-danger {
        background: rgba(255, 59, 48, 0.1);
        color: #ff3b30;
        border: 1px solid rgba(255, 59, 48, 0.2);
    }

    .apple-btn-danger:hover {
        background: rgba(255, 59, 48, 0.15);
        border-color: rgba(255, 59, 48, 0.3);
        transform: scale(1.02);
    }

    .apple-input {
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        padding: 12px 16px;
        font-size: 1rem;
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        transition: all 0.2s ease;
    }

    .apple-input:focus {
        border-color: #007aff;
        box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
        outline: none;
        background: rgba(255, 255, 255, 0.95);
    }

    .category-title {
        font-weight: 600;
        color: #1d1d1f;
        font-size: 1.1rem;
        margin-bottom: 4px;
    }

    .category-description {
        color: #86868b;
        font-size: 0.8rem;
        line-height: 1.3;
    }

    
</style>

<div class="container-fluid px-4 py-5" style="max-width: 1200px;">
    <!-- Header -->
    <div class="text-center mb-5">
        <h1 class="apple-title" style="font-size: 3rem; margin-bottom: 0.5rem;">
            Categories
        </h1>
        <p class="apple-subtitle" style="font-size: 1.1rem;">
            Manage your expense categories
        </p>
    </div>

    <!-- Categories Grid -->
    <div class="row g-3 mb-5">
        @foreach (var category in categories)
        {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="glass-card">
                    <div class="card-body p-3 d-flex flex-column justify-content-between h-100">
                        <div>
                            <h6 class="category-title">@category.Name</h6>
                            <p class="category-description mb-3">View all expenses in this category</p>
                        </div>
                        <div class="d-grid gap-1">
                            <a class="apple-btn apple-btn-primary text-decoration-none d-block text-center" 
                               href="@($"/expenses/category/{category.Id}")">
                                View Expenses
                            </a>
                            <button class="apple-btn apple-btn-danger w-100" 
                                    @onclick="() => DeleteCategory(category.Id)">
                                🗑️ Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Add New Category -->
    <div class="add-category-card p-4">
        <h5 class="mb-3" style="font-weight: 600; color: #007aff;">
            ✨ Add New Category
        </h5>
        <div class="row g-3 align-items-end">
            <div class="col-md-8 col-sm-7">
                <input type="text" 
                       class="apple-input w-100" 
                       @bind="newCategoryName" 
                       placeholder="Enter category name..."
                       @onkeypress="@((e) => { if (e.Key == "Enter") AddCategory(); })" />
            </div>
            <div class="col-md-4 col-sm-5">
                <button class="apple-btn apple-btn-primary w-100" @onclick="AddCategory">
                    ➕ Add Category
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    List<Category> categories = new();
    
    protected override void OnInitialized()
    {
        LoadCategories();
    }
    
    void LoadCategories()
    {
        categories = Service.findAllCategories();
    }
    
    string newCategoryName;
    
    void AddCategory()
    {
        if (!string.IsNullOrWhiteSpace(newCategoryName))
        {
            Category category = new()
            {
                Id = categories.Count > 0 ? categories.Max(c => c.Id) + 1 : 1,
                Name = newCategoryName
            };
            Service.addCategory(category);
            LoadCategories();
            newCategoryName = string.Empty;
            StateHasChanged();
        }
    }
    
    void DeleteCategory(int? id)
    {
        var categoryToRemove = categories.FirstOrDefault(c => c.Id == id);
        if (categoryToRemove != null)
        {
            Service.removeCategory(categoryToRemove);
            LoadCategories();
            StateHasChanged();
        }
    }
}