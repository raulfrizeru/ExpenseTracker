@page "/"
@rendermode InteractiveServer
@using ExpenseTracker.Components.Data.Models
@using ExpenseTracker.Components.Services
@inject IncomeService IncomeService
@inject ExpenseService ExpenseService
@inject CategoryService CategoryService

<PageTitle>Expense Tracker</PageTitle>

<div class="container-fluid px-3 py-3" style="max-width: 1400px;">
    <!-- Header -->
    <div class="text-center mb-3">
        <h1 class="apple-title" style="font-size: 2.5rem; margin-bottom: 0.25rem;">
            Expense Tracker
        </h1>
        <p class="apple-subtitle" style="font-size: 1rem;">
            Your personal finance dashboard
        </p>
    </div>

    <!-- Primary Stats - Most Important (Large Cards) -->
    <div class="row g-3 mb-4">
        <!-- Balance -->
        <div class="col-lg-4">
            <div class="balance-card p-4 text-center h-100">
                <h6 class="apple-stat-title mb-2" style="color: #86868b;">
                    Current Balance
                </h6>
                <h1 class="apple-balance @GetBalanceClass()" style="font-size: 3rem; margin: 0;">
                    @GetBalance().ToString("N2") <span style="font-size: 1.8rem; opacity: 0.8;">RON</span>
                </h1>
                <p class="apple-date-range mt-2">Total Income - Total Expenses</p>
            </div>
        </div>

        <!-- Total Income -->
        <div class="col-lg-4">
            <div class="glass-card income-card h-100">
                <div class="card-body p-4">
                    <h6 class="apple-stat-title text-apple-green mb-2">
                        Total Income
                    </h6>
                    <h2 class="apple-stat-value mb-3" style="color: #1d1d1f;">
                        @totalIncome.ToString("N2") <small style="opacity: 0.7; font-size: 1rem;">RON</small>
                    </h2>
                    <p class="apple-date-range mb-2">@GetIncomesDateRange()</p>
                    <div class="mt-auto">
                        <p class="apple-date-range mb-1" style="font-size: 0.75rem;">This Month</p>
                        <h5 class="apple-stat-value text-apple-green mb-0">
                            @currMonthIncome.ToString("N2") RON
                        </h5>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total Expenses -->
        <div class="col-lg-4">
            <div class="glass-card expense-card h-100">
                <div class="card-body p-4">
                    <h6 class="apple-stat-title text-apple-red mb-2">
                        Total Expenses
                    </h6>
                    <h2 class="apple-stat-value mb-3" style="color: #1d1d1f;">
                        @totalExpense.ToString("N2") <small style="opacity: 0.7; font-size: 1rem;">RON</small>
                    </h2>
                    <p class="apple-date-range mb-2">@GetExpensesDateRange()</p>
                    <div class="mt-auto">
                        <p class="apple-date-range mb-1" style="font-size: 0.75rem;">This Month</p>
                        <h5 class="apple-stat-value text-apple-red mb-0">
                            @currMonthExpense.ToString("N2") RON
                        </h5>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Expense Breakdown Group -->
    <div class="row g-3 mb-3">
        <div class="col-12">
            <h6 class="apple-subtitle mb-3" style="font-size: 0.9rem; font-weight: 600; color: #86868b; text-transform: uppercase; letter-spacing: 0.5px;">
                Expense Breakdown
            </h6>
        </div>
        <!-- Planned Expenses -->
        <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="glass-card planned-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-blue mb-1">
                        Planned Expenses
                    </h6>
                    <h4 class="apple-stat-value compact-value text-apple-blue mb-0">
                        @ExpenseService.findPlannedExpenses().ToString("N2") <small style="opacity: 0.7;">RON</small>
                    </h4>
                </div>
            </div>
        </div>

        <!-- Unplanned Expenses -->
        <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="glass-card unplanned-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-gray mb-1">
                        Unplanned Expenses
                    </h6>
                    <h4 class="apple-stat-value compact-value text-apple-gray mb-0">
                        @ExpenseService.findUnplannedExpenses().ToString("N2") <small style="opacity: 0.7;">RON</small>
                    </h4>
                </div>
            </div>
        </div>

        <!-- Top Category -->
        <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="glass-card category-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-orange mb-1">
                        Top Category
                    </h6>
                    <p class="apple-date-range mb-1">This Month</p>
                    <h5 class="apple-stat-value mb-0" style="color: #1d1d1f; line-height: 1.2; font-size: 0.95rem;">
                        @(ExpenseService.getBiggestExpenseCategory()?.Name ?? "No expenses yet")
                    </h5>
                </div>
            </div>
        </div>

        <!-- Monthly Balance -->
        <div class="col-xl-3 col-lg-4 col-md-6">
            <div class="glass-card balance-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title mb-1" style="color: #86868b;">
                        Monthly Balance
                    </h6>
                    <p class="apple-date-range mb-1">This Month</p>
                    <h4 class="apple-stat-value mb-0 @((currMonthIncome - currMonthExpense) >= 0 ? "text-success" : "text-danger")">
                        @((currMonthIncome - currMonthExpense).ToString("N2")) <small style="opacity: 0.7; font-size: 0.8rem;">RON</small>
                    </h4>
                </div>
            </div>
        </div>
    </div>

    <!-- Additional Stats Group -->
    <div class="row g-3">
        <div class="col-12">
            <h6 class="apple-subtitle mb-3" style="font-size: 0.9rem; font-weight: 600; color: #86868b; text-transform: uppercase; letter-spacing: 0.5px;">
                Additional Stats
            </h6>
        </div>
        <!-- Total Categories -->
        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
            <div class="glass-card category-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-orange mb-1">
                        Categories
                    </h6>
                    <h5 class="apple-stat-value compact-value text-apple-orange mb-0">
                        @categories.Count <small style="opacity: 0.7;">total</small>
                    </h5>
                </div>
            </div>
        </div>

        <!-- Total Income Transactions -->
        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
            <div class="glass-card income-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-green mb-1">
                        Income Records
                    </h6>
                    <h5 class="apple-stat-value compact-value text-apple-green mb-0">
                        @incomes.Count <small style="opacity: 0.7;">entries</small>
                    </h5>
                </div>
            </div>
        </div>

        <!-- Total Expense Transactions -->
        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
            <div class="glass-card expense-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title text-apple-red mb-1">
                        Expense Records
                    </h6>
                    <h5 class="apple-stat-value compact-value text-apple-red mb-0">
                        @expenses.Count <small style="opacity: 0.7;">entries</small>
                    </h5>
                </div>
            </div>
        </div>

        <!-- Total Transactions -->
        <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
            <div class="glass-card balance-card compact-card">
                <div class="card-body p-3">
                    <h6 class="apple-stat-title mb-1" style="color: #86868b;">
                        All Transactions
                    </h6>
                    <h5 class="apple-stat-value compact-value mb-0" style="color: #1d1d1f;">
                        @(incomes.Count + expenses.Count) <small style="opacity: 0.7;">total</small>
                    </h5>
                </div>
            </div>
        </div>

        <!-- Average Income (if has incomes) -->
        @if (incomes.Count > 0)
        {
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <div class="glass-card income-card compact-card">
                    <div class="card-body p-3">
                        <h6 class="apple-stat-title text-apple-green mb-1">
                            Avg Income
                        </h6>
                        <h6 class="apple-stat-value compact-value text-apple-green mb-0" style="font-size: 0.9rem;">
                            @((totalIncome / incomes.Count).ToString("N2")) <small style="opacity: 0.7;">RON</small>
                        </h6>
                    </div>
                </div>
            </div>
        }

        <!-- Average Expense (if has expenses) -->
        @if (expenses.Count > 0)
        {
            <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                <div class="glass-card expense-card compact-card">
                    <div class="card-body p-3">
                        <h6 class="apple-stat-title text-apple-red mb-1">
                            Avg Expense
                        </h6>
                        <h6 class="apple-stat-value compact-value text-apple-red mb-0" style="font-size: 0.9rem;">
                            @((totalExpense / expenses.Count).ToString("N2")) <small style="opacity: 0.7;">RON</small>
                        </h6>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', sans-serif;
        min-height: 100vh;
    }

    .glass-card {
        background: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(20px);
        -webkit-backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        border-radius: 16px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
        transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

        .glass-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
            border-color: rgba(255, 255, 255, 0.4);
        }

    .balance-card {
        background: linear-gradient(135deg, rgba(255, 255, 255, 0.4) 0%, rgba(255, 255, 255, 0.1) 100%);
        backdrop-filter: blur(30px);
        -webkit-backdrop-filter: blur(30px);
        border: 1px solid rgba(255, 255, 255, 0.4);
        border-radius: 20px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

    .income-card {
        background: linear-gradient(135deg, rgba(52, 199, 89, 0.15) 0%, rgba(52, 199, 89, 0.05) 100%);
        border: 1px solid rgba(52, 199, 89, 0.2);
    }

    .expense-card {
        background: linear-gradient(135deg, rgba(255, 59, 48, 0.15) 0%, rgba(255, 59, 48, 0.05) 100%);
        border: 1px solid rgba(255, 59, 48, 0.2);
    }

    .category-card {
        background: linear-gradient(135deg, rgba(255, 149, 0, 0.15) 0%, rgba(255, 149, 0, 0.05) 100%);
        border: 1px solid rgba(255, 149, 0, 0.2);
    }

    .planned-card {
        background: linear-gradient(135deg, rgba(0, 122, 255, 0.15) 0%, rgba(0, 122, 255, 0.05) 100%);
        border: 1px solid rgba(0, 122, 255, 0.2);
    }

    .unplanned-card {
        background: linear-gradient(135deg, rgba(142, 142, 147, 0.15) 0%, rgba(142, 142, 147, 0.05) 100%);
        border: 1px solid rgba(142, 142, 147, 0.2);
    }

    .apple-title {
        font-weight: 600;
        color: #1d1d1f;
        letter-spacing: -0.022em;
    }

    .apple-subtitle {
        color: #86868b;
        font-weight: 400;
    }

    .apple-balance {
        font-weight: 700;
        letter-spacing: -0.025em;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .apple-stat-title {
        font-size: 0.7rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        opacity: 0.8;
    }

    .apple-stat-value {
        font-weight: 600;
        letter-spacing: -0.02em;
    }

    .apple-date-range {
        font-size: 0.7rem;
        color: #86868b;
        font-weight: 400;
    }

    .text-apple-green {
        color: #34c759;
    }

    .text-apple-red {
        color: #ff3b30;
    }

    .text-apple-orange {
        color: #ff9500;
    }

    .text-apple-blue {
        color: #007aff;
    }

    .text-apple-gray {
        color: #8e8e93;
    }

    .compact-card {
        min-height: auto;
    }

    .small-stat {
        font-size: 0.85rem;
    }

    .compact-balance {
        font-size: 2.5rem;
    }

    .compact-value {
        font-size: 1.1rem;
    }

</style>

@code {
    List<Income> incomes = new();
    List<Expense> expenses = new();
    List<Category> categories = new();
    decimal totalIncome = 0;
    decimal totalExpense = 0;
    decimal currMonthIncome = 0;
    decimal currMonthExpense = 0;

    protected override void OnInitialized()
    {
        incomes = IncomeService.findAllIncomes();
        expenses = ExpenseService.findAllExpenses();
        categories = CategoryService.findAllCategories();
        totalIncome = IncomeService.getTotalIncome();
        totalExpense = ExpenseService.getTotalExpense();
        currMonthIncome = IncomeService.getCurrentMonthIncome();
        currMonthExpense = ExpenseService.getCurrentMonthExpense();
    }

    private decimal GetBalance()
    {
        return totalIncome - totalExpense;
    }

    private string GetBalanceClass()
    {
        return GetBalance() >= 0 ? "text-success" : "text-danger";
    }

    private string GetIncomesDateRange()
    {
        if (incomes.Count == 0) return "No incomes yet";
        var start = incomes.Min(i => i.Date).ToString("dd MMM yyyy");
        var end = incomes.Max(i => i.Date).ToString("dd MMM yyyy");
        return $"{start} - {end}";
    }

    private string GetExpensesDateRange()
    {
        if (expenses.Count == 0) return "No expenses yet";
        var start = expenses.Min(e => e.Date).ToString("dd MMM yyyy");
        var end = expenses.Max(e => e.Date).ToString("dd MMM yyyy");
        return $"{start} - {end}";
    }
}